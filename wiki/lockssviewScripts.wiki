#summary lockssview commandline scripts

= Lockssview command line scripts = 

<dl> 
<dt> {{{ INSTALL_DIR/scripts.py  }}}  
</dt><dd> list available scripts   </dd>
<dt>  {{{ INSTALL_DIR/scripts.py THESCRIPT PARAMS  }}} 
</dt> <dd> execute THESCRIPT  with given parameters
</dd> 
</dl> 
Scripts fall into two categories: those, that retrieve information form individual LOCKSS caches and print status information about them and those, that report on content preserved on several LOCKSS Caches. 

In the following we us {{{ lksNAME }}} as shortcut for {{{ INSTALL_DIR/scripts.py NAME }}} 

= Parameters common to all Scripts  = 

All commands accept the following: 
<dl> 
<dt> {{{ --help }}} </dt>
<dd>     The usage messages printed are available a [http://educopia.googlecode.com/svn/trunk/pln_admin/lockssview/doc/scripts/usage/  usage txt files] </dd> 
<dt> {{{ --version }}} </dt>
<dd> Versions correspond to the subversion revision of a scripts last commit. </dd>
<dt> {{{ -c filename }}} </dt>
<dd>    Scripts read the given file name and parse options defined in the [Status] section as configuration parameters; users may give multiple configuration files. See the cachestatus.rc example file.  </dd>
<dt>  {{{ -d }}} </dt> 
<dd> Dryrun; interpret command line and read configuration files  </dd> 
<dt>  -l loglevel </dt>
<dd>      The amount of logging desired: 1==most, 21=least </dd>
</dl>

=== Configuration files  ===

Each command reads configuration files (if existent)  in the following order 
 # ~/.command.rc 
 # ./command.rc 
 # files listed in -c options on the command line i the order that they are listed 

Parameters values given on the command line supersede  any settings in configuration files.  

All parameters that can be set via command line options, may be defined in configuration files instead. All scripts look for settings in the [Status] section only. It is easy to share common settings across commands by passing a common configuration file to scripts via the -c option. [http://lockssview.metaarchive.org/doc/scripts/cachestatus.rc cachestatus.rc] shows settings for all options accepted by the cachestatus script. 

== EXAMPLE USAGE  == 


=== Caches ===   

[https://educopia.googlecode.com/svn/trunk/pln_admin/lockssview/doc/scripts/usage/caches.txt lkscaches USAGE] 

<dl> 
<dt> {{{ lkscaches --help  }}}  </dt> <dd>    print usage message  </dd> 
<dt> {{{  lkscaches  }}} </dt> <dd> Print all defined caches  </dd> 
<dt> {{{ lkscaches  -n  }}} </dt> <dd> Print the names of caches only </dd> 
<dt> {{{ lkscaches -N production  }}} </dt> <dd> Print the only production network caches </dd> 
<dt> {{{ lkscaches -N production -D }}} </dt> <dd> Print the docmain names of production network caches </dd> 
</dl> 

=== CacheStatus  ===
[https://educopia.googlecode.com/svn/trunk/pln_admin/lockssview/doc/scripts/usage/cachestatus.txt lkscachestatus USAGE]

lkscachestatus is the work horse for retrieving status information from LOCKSS
caches, storing retrieved information in the lockssview database,  and for printing cache specific information to tab separated files. 

When retrieving data, users must specify at least one LOCKSS cache to retrieve data from and one of the get-action. Except for the {{{getauidlist}}} action users must also define at least one id of an archival unit, for which the information should be retrieved: 
<dl>
<dt>getauidlist</dt>
<dd> retrieve list of preserved archival unit ids from given LOCKSS caches(s) </dd>
<dt>getausummary</dt>
<dd> retrieve ausummary info for given archival unit(s) </dd>
<dt>getcrawlstatus</dt>
<dd> retrieve crawlstatus info for given archival units(s) </dd>
<dt>geturllist</dt>
<dd> retrieve urllist for given archival units(s) </dd>
<dt>getreposspace, getcommpeers</dt>
<td> not yet fully implemented </dd>
</dl>


To retrieve data from a cache use one of the get-actions: getauidlist, 
 *
When retrieving information a user must define 
* at least one cache from which to retrieve information 
* username and password to access cache user interface  
* which LOCKSS UI status table to access: auidlist, ausummary, urllists, and/or crawlstatus 
* when retrieving ausummary, urllists, or crawlstatus info : which archival units are of interest

Retrieve the list of known auids  from the aub-dell server 
The server parameter may either be a cache name or a cache's domain name 
 lkscachestatus -a getauidlist -u user -p pwd -S aub-dell 

Get ausummary  and crawlstatus info for all aus known to the aub-dell cache
 lkscachestatus -a getausummary -a getcrawlstatus --all  -u user -p pwd -S aub-dell 

Get urllist for all aus starting with edu.auburn  and crawlstatus info for all aus known to the aub-dell cache
 lkscachestatus -a geturllist -P edu.auburn  -u user -p pwd -S aub-dell 

Get urllists for 
edu|auburn|glomeratatif2&base_url~http%3A%2F%2Fdigdata1%2Elib%2Eauburn%2Eedu%2Fglomeratas%2F&year~1928
if the info stored in the database is older than 3 days = 72 hours 
 lkscachestatus -a geturllist -u user -p pwd -S aub-dell 'edu|auburn|glomeratatif2&base_url~http%3A%2F%2Fdigdata1%2Elib%2Eauburn%2Eedu%2Fglomeratas%2F&year~192'
Note that refreshing the urllist info includes refreshing ausuammry info. 
urllist and ausuammry information is only requested from the cache if the
stored information is outdated; runnig the command a second time will NOT
update the information again. 