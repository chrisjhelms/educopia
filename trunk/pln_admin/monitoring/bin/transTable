#!/usr/bin/perl  

use strict;
use Getopt::Long; 

my %tables= (
   "AU_Status",  "ArchivalUnitStatusTable", 
   "AU_Ids",  "AuIds", 
   "Overview","OverviewStatus", 
   "Plugins", "Plugins", 
   "Polls", "V3PollerTable", 
   "Repository",  "RepositoryTable", 
   "Space", "RepositorySpace", 
   "CrawlStatus", "crawl_status_table"
); 

my $CONFIG_DIR = "/home/metaarchive/bin/pullTable.conf"; 
my $INFILE = "-";
my $OUTFILE = "-";
my $TABLE;
my $HELP;
my $DOTRACE;

if (0 == parseargs()) {
    doit(); 
    exit(0); 
}
exit(1) ;

sub parseargs 
{
 my $result = GetOptions( 
            "help=s" => \$HELP,
            "in=s" => \$INFILE, 
            "out=s" => \$OUTFILE, 
            "table=s" => \$TABLE, 
            "t" => \$DOTRACE 
           ); 
  if (!$HELP && (!$TABLE)) {
    $result = 0; 
  }
  if (!$HELP && (($INFILE =~ $OUTFILE) && ($INFILE !~ "-"))) {
     print STDERR "ERROR: input and output are equal\n"; 
     $result = 0;
  } 
  if ($result == 1) { 
     if ($DOTRACE) {
         showglobals(); 
     } 
     if ($HELP) { 
        if ($HELP eq "table") {
            usage_table(); 
            return 1; 
        }
        return usage(); 
        return 1; 
     }
  } else {
     usage(); 
     return 1; 
  }
}
 
sub usage 
{
print   "usage: transTable OPTIONS\n"; 
print "OPTIONS:\n"; 
print "\t-help topic,      print help about topic,\n" . 
      "\t                      where topic is table\n"; 
print "\t-help,            print this help msgs\n"; 
print "\t-in file,         input file (default '-' for stdin)\n"; 
print "\t-out file,        output file (default '-' for stdout)\n"; 
print "\t-table tableName, defines the stylesheet that will be applied\n";
print "\t-t,               whether to trace the script's actions\n"; 
print "\n"; 
print "Transform input file to output file applying the  style \n"  . 
      "sheet that corresponds to the given LOCKSS table.\n"; 
}

sub usage_table 
{
   print "available tables: \n"; 
   while ( my($table, $uitable) = each(%tables) ) {
        if ($uitable) { 
           print "\t$table (meaning /DaemonStatus?table=$uitable)\n"; 
        } else { 
           print "\tERROR\n"; 
        }
   } 
}

sub showglobals
{
   print "CONFIG_DIR=$CONFIG_DIR \n"; 
   print "INFILE= $INFILE \n"; ;
   print "OUTFILE= $OUTFILE \n"; ;
   print "TABLE= $TABLE\n";;
   print "DOTRACE= $DOTRACE \n"; 
}
 
sub doit
{
   my $xsl = "$CONFIG_DIR/$TABLE.xsl";
   if (-r $xsl) { 
       my $cmd = "xsltproc "; 
       if ($outfile !~ "-") {

       print "xsltproc --outfile $OUTFILE $xsl $INFILE\n"; 
   } else { 
       print STDERR "Unreadable xslt sheet $xsl\n"; 
       return 1;
   } 
}

sub systm
{
   my $cmd = join(' ', @_); 
   trace($cmd); 
   my($rc) = system($cmd); 
   if ($rc != 0) {
       print STDERR "FAILED: $cmd\n"; 
   } 
}

sub trace
{
   my $str = join(' ', @_); 
   if ($DOTRACE) { 
      print $str . "\n"; 
   } 
}

